{"version":3,"sources":["Components/Navigation/Drawer/Drawer.module.css","hoc/Layout/Layout.module.css","Components/Navigation/MenuToggle/menuToggle.module.css","Containers/Quiz/Quiz.module.css","Components/ActiveQuiz/ActiveQuiz.module.css","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","Components/UI/Button/Button.module.css","Components/UI/Loader/Loader.module.css","Containers/Auth/Auth.module.css","Components/UI/Input/Input.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/ActiveQuiz/AnswersList/AnswersList.module.css","Containers/QuizList/QuizList.module.css","Containers/QuizCreator/QuizCreator.module.css","Components/UI/Select/Select.module.css","Components/Navigation/MenuToggle/menuToggle.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","Components/ActiveQuiz/AnswersList/AnswersList.js","Components/ActiveQuiz/ActiveQuiz.js","Components/UI/Button/Button.js","Components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","Components/UI/Loader/Loader.js","Containers/Quiz/Quiz.js","Containers/QuizList/QuizList.js","Components/UI/Input/Input.js","Containers/Auth/Auth.js","Components/UI/Select/Select.js","Form/FormFramework.js","Containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","map","link","index","key","activeClassName","active","onClose","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","children","AnswerItem","console","log","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","center","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","QuizWrapper","QuizList","quizes","name","forEach","renderQuizes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","a","async","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","Type","onSubmit","AuthForm","renderInputs","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","select","renderControls","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,mBCAzDD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,8B,mBCApHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,aAAa,6B,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,mBCAjED,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,kNCuBZC,EArBI,SAAAC,GACjB,IAAMC,EAAM,CACVC,IAAQH,WACR,MAUF,OAPIC,EAAMG,QACRF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQG,OAEjBJ,EAAIG,KAAK,WAIT,uBACAE,UAAWL,EAAIM,KAAK,KACpBC,QAASR,EAAMS,Y,iCChBbR,EAAM,C,OACVC,EAAQQ,UAiBKA,EAbE,SAAAV,GAQf,OANIA,EAAMG,OACRF,EAAIG,KAAK,UAMT,yBAAKE,UAAWL,EAAIM,KAAK,KAAMC,QAASR,EAAMQ,WCZ5CG,EAAQ,CACZ,CAACC,GAAI,IAAKC,MAAO,uCAAUC,OAAO,GAClC,CAACF,GAAI,QAASC,MAAO,qEAAeC,OAAO,GAC3C,CAACF,GAAI,gBAAiBC,MAAO,sEAAgBC,OAAO,IA0CvCC,E,sLArCE,IAAD,OACZ,OAAOJ,EAAMK,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CACEN,GAAIK,EAAKL,GACTE,MAAOG,EAAKH,MACZM,gBAAiBlB,IAAQmB,OACzBb,QAAS,EAAKR,MAAMsB,SAEnBL,EAAKJ,a,+BAQd,IAAMZ,EAAM,CAACC,IAAQa,QAMrB,OAJKQ,KAAKvB,MAAMG,QACdF,EAAIG,KAAKF,IAAQsB,OAIjB,kBAAC,IAAMC,SAAP,KACE,yBAAKnB,UAAWL,EAAIM,KAAK,MACvB,4BACGgB,KAAKG,gBAGTH,KAAKvB,MAAMG,OAAS,kBAAC,EAAD,CAAUK,QAASe,KAAKvB,MAAMsB,UAAa,U,GAjCnDK,aC6BNC,E,2MAjCbC,MAAO,CACLC,MAAM,G,EAGRC,kBAAoB,WAClB,EAAKC,SAAS,CACZF,MAAO,EAAKD,MAAMC,Q,wEAMpB,OACE,yBAAKxB,UAAWJ,IAAQ0B,QAEtB,kBAAC,EAAD,CACEzB,OAAQoB,KAAKM,MAAMC,KACnBR,QAASC,KAAKQ,oBAGhB,kBAAC,EAAD,CACAtB,SAAUc,KAAKQ,kBACf5B,OAAQoB,KAAKM,MAAMC,OAGnB,0BAAMxB,UAAWJ,IAAQ0B,QACtBL,KAAKvB,MAAMiC,e,GA5BDN,a,oGCeNO,EAjBI,SAAAlC,GACf,IAAMC,EAAM,CAACC,IAAQgC,YAOrB,OALIlC,EAAM6B,QACNM,QAAQC,IAAI,4BAA8BpC,EAAM6B,OAChD5B,EAAIG,KAAKF,IAAQF,EAAM6B,SAIvB,wBAAIvB,UAAWL,EAAIM,KAAK,KACxBC,QAAS,kBAAIR,EAAMqC,cAAcrC,EAAMsC,OAAOC,MAEzCvC,EAAMsC,OAAOE,OCMXC,EAjBK,SAAAzC,GAClB,OACE,wBAAIM,UAAWJ,IAAQuC,aACpBzC,EAAM0C,QAAQ1B,KAAI,SAACsB,EAAQpB,GAC1B,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLoB,OAAQA,EACRD,cAAerC,EAAMqC,cACrBR,MAAO7B,EAAM6B,MAAQ7B,EAAM6B,MAAMS,EAAOC,IAAM,YCU3CI,EAnBI,SAAA3C,GAAK,OACtB,yBAAKM,UAAWJ,IAAQyC,YACtB,uBAAGrC,UAAWJ,IAAQ0C,UACd,8BACI,gCAAS5C,EAAM6C,cADnB,OAEG7C,EAAM8C,UAGf,+BAAQ9C,EAAM6C,aAAd,iBAAgC7C,EAAM+C,aAGxC,kBAAC,EAAD,CACElB,MAAO7B,EAAM6B,MACba,QAAS1C,EAAM0C,QACfL,cAAerC,EAAMqC,kB,kCCEZW,EAjBA,SAAAhD,GACb,IAAMC,EAAM,CACVC,IAAQ8C,OACR9C,IAAQF,EAAMiD,OAGhB,OACE,4BACAzC,QAASR,EAAMQ,QACfF,UAAWL,EAAIM,KAAK,KACpB2C,SAAUlD,EAAMkD,UAEblD,EAAMiC,WCiCEkB,EA3CM,SAAAnD,GACnB,IAAMoD,EAAeC,OAAOC,KAAKtD,EAAMuD,SAASC,QAAO,SAACC,EAAOtC,GAI7D,MAH2B,YAAvBnB,EAAMuD,QAAQpC,IAChBsC,IAEKA,IACN,GAEH,OACE,yBAAKnD,UAAWJ,IAAQiD,cACtB,4BACGhB,QAAQC,IAAIpC,GACZA,EAAM0D,KAAK1C,KAAI,SAAC2C,EAAUzC,GACvB,IAAMjB,EAAM,CACV,KAC+B,UAA/BD,EAAMuD,QAAQI,EAASpB,IAAkB,WAAa,WACtDrC,IAAQF,EAAMuD,QAAQI,EAASpB,MAGjC,OAAO,wBACLpB,IAAKD,GAEL,gCAASA,EAAQ,GAHZ,SAIJyC,EAASb,SACV,uBAAGxC,UAAWL,EAAIM,KAAK,YAO/B,2BAAI6C,EAAJ,iBAAsBpD,EAAM0D,KAAKE,QAEjC,6BACE,kBAAC,EAAD,CAAQpD,QAASR,EAAM6D,QAASZ,KAAK,WAArC,0DACA,kBAAC,IAAD,CAAMrC,GAAI,KACR,kBAAC,EAAD,CAAQqC,KAAK,WAAb,mI,iBCvCKa,MAAMC,OAAO,CAC1BC,QAAS,6C,iBCAI,WAAAC,GAAM,OAEnB,yBAAK3D,UAAWJ,IAAQgE,QACtB,yBAAK5D,UAAWJ,IAAQ+D,QACtB,8BACA,iCC2ISE,E,2MA3IbtC,MAAQ,CACN0B,QAAS,GACTa,YAAY,EACZC,eAAgB,EAChBC,YAAa,KACbZ,KAAM,GACNa,SAAS,G,EAGXC,qBAAuB,SAACC,GAEtB,GADAtC,QAAQC,IAAI,aAAcqC,GACtB,EAAK5C,MAAMyC,YAAa,CAC1B,IAAMnD,EAAMkC,OAAOC,KAAK,EAAKzB,MAAMyC,aAAa,GAChD,GAAoC,YAAhC,EAAKzC,MAAMyC,YAAYnD,GAEzB,YADAgB,QAAQC,IAAI,kBAKhBD,QAAQC,IAAI,oBAAqBqC,GAEjC,IAAM3B,EAAW,EAAKjB,MAAM6B,KAAK,EAAK7B,MAAMwC,gBACtCd,EAAU,EAAK1B,MAAM0B,QAE3B,GAAIT,EAAS4B,gBAAkBD,EAAU,CACvCtC,QAAQC,IAAImB,EAAQkB,IAEpBlB,EAAQT,EAASP,IAAM,UACvBJ,QAAQC,IAAI,KAAOmB,EAAQkB,IAG3B,EAAKzC,SAAS,CACZsC,YAAY,eAAGG,EAAW,aAG5B,IAAME,EAAUC,OAAOC,YAAW,WAChC1C,QAAQC,IAAI,kBAAmBmB,GAC3B,EAAKuB,kBACP3C,QAAQC,IAAI,kBACZ,EAAKJ,SAAS,CACZoC,YAAY,KAGd,EAAKpC,SAAS,CACZqC,eAAgB,EAAKxC,MAAMwC,eAAiB,EAC5CC,YAAa,OAGjBM,OAAOG,aAAaJ,KACnB,SAGE,CAELpB,EAAQT,EAASP,IAAM,QACvBJ,QAAQC,IAAI,KAAOmB,EAAQkB,IAE3B,EAAKzC,SAAS,CACZsC,YAAY,eAAGG,EAAW,WAG5B,IAAME,EAAUC,OAAOC,YAAW,WAChC1C,QAAQC,IAAI,kBAAmBmB,GAE3B,EAAKuB,kBACP3C,QAAQC,IAAI,kBACZ,EAAKJ,SAAS,CACZoC,YAAY,KAGd,EAAKpC,SAAS,CACZqC,eAAgB,EAAKxC,MAAMwC,eAAiB,EAC5CC,YAAa,OAGjBM,OAAOG,aAAaJ,KACnB,O,EASPK,aAAe,WACb,EAAKhD,SAAS,CACZqC,eAAgB,EAChBC,YAAa,KACbF,YAAY,EACZb,QAAS,M,gFARX,OAAOhC,KAAKM,MAAMwC,eAAiB,IAAM9C,KAAKM,MAAM6B,KAAKE,S,uJAchCE,EAAMmB,IAAN,kBAAqB1D,KAAKvB,MAAMkF,MAAMC,OAAO5C,GAA7C,W,OAAjB6C,E,OACA1B,EAAO0B,EAASC,KAEtB9D,KAAKS,SAAS,CACZ0B,OACAa,SAAS,I,gDAGXpC,QAAQC,IAAR,M,yFAKF,OACE,yBAAK9B,UAAWJ,IAAQiE,MACtB,yBAAK7D,UAAWJ,IAAQoF,aACtB,2JAGE/D,KAAKM,MAAM0C,QACP,kBAAC,EAAD,MACAhD,KAAKM,MAAMuC,WACX,kBAAC,EAAD,CACAb,QAAShC,KAAKM,MAAM0B,QACpBG,KAAMnC,KAAKM,MAAM6B,KACjBG,QAAStC,KAAKyD,eAEd,kBAAC,EAAD,CACAlC,SAAUvB,KAAKM,MAAM6B,KAAKnC,KAAKM,MAAMwC,gBAAgBvB,SACrDJ,QAASnB,KAAKM,MAAM6B,KAAKnC,KAAKM,MAAMwC,gBAAgB3B,QACpDL,cAAed,KAAKiD,qBACpBzB,WAAYxB,KAAKM,MAAM6B,KAAKE,OAC5Bf,aAActB,KAAKM,MAAMwC,eAAiB,EAC1CxC,MAAON,KAAKM,MAAMyC,oB,GAlIf3C,a,oBCDE4D,G,2MAEnB1D,MAAQ,CACN2D,OAAQ,GACRjB,SAAS,G,8EAIT,OAAOhD,KAAKM,MAAM2D,OAAOxE,KAAI,SAAC0C,GAC5B,OACE,wBACEvC,IAAKuC,EAAKnB,IAEV,kBAAC,IAAD,CAAS3B,GAAI,SAAW8C,EAAKnB,IAC1BmB,EAAK+B,Y,uJASW3B,EAAMmB,IAAI,iB,OAA3BG,E,OAENjD,QAAQC,IAAIgD,EAASC,MAEbG,EAAS,GAEfnC,OAAOC,KAAK8B,EAASC,MAAMK,SAAQ,SAACvE,EAAKD,GACvCsE,EAAOpF,KAAK,CACVmC,GAAIpB,EACJsE,KAAK,kCAAD,OAAWvE,EAAQ,QAI7BiB,QAAQC,IAAIoD,GAEZjE,KAAKS,SAAS,CACZwD,SACAjB,SAAS,I,kDAIXpC,QAAQC,IAAR,M,0FAKF,OACE,yBAAK9B,UAAWJ,KAAQqF,UACtB,6BACA,yGAGIhE,KAAKM,MAAM0C,QACT,kBAAC,EAAD,MACA,4BACIhD,KAAKoE,sB,GA1DehE,a,iDCHtC,SAASiE,GAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAClC,OAAQF,GAASE,GAAkBD,EAGrC,IA8BeE,GA9BD,SAAAhG,GAEZ,IAAMiG,EAAYjG,EAAMiD,MAAQ,OAC1BhD,EAAM,CAACC,KAAQ8F,OACfE,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,GAAU5F,IACZC,EAAIG,KAAKF,KAAQmG,SAIjB,yBAAK/F,UAAWL,EAAIM,KAAK,MACvB,2BAAO2F,QAASA,GAAUlG,EAAMa,OAChC,2BACEoC,KAAMgD,EACN1D,GAAI2D,EACJI,MAAOtG,EAAMsG,MACbC,SAAUvG,EAAMuG,WAIhBX,GAAU5F,GACN,8BAAOA,EAAMwG,cAAgB,oIAC7B,O,oBCvBSC,G,2MAEnB5E,MAAQ,CACN6E,aAAa,EACbC,aAAc,CACZC,MAAO,CACLN,MAAO,GACPrD,KAAM,QACNpC,MAAO,QACP2F,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACVC,UAAU,EACVF,OAAO,IAGXG,SAAU,CACRT,MAAO,GACPrD,KAAM,WACNpC,MAAO,uCACP2F,aAAc,+IACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACVC,UAAU,EACVE,UAAW,M,EAMnBC,aAAe,4BAAAC,EAAAC,OAAA,uDACPC,EAAW,CACfR,MAAO,EAAK/E,MAAM8E,aAAaC,MAAMN,MACrCS,SAAU,EAAKlF,MAAM8E,aAAaI,SAAST,MAC3Ce,mBAAmB,GAJR,oBAAAH,EAAA,MAOYpD,IAAMwD,KAAK,oHAAqHF,IAP5I,OAOLhC,EAPK,OASXjD,QAAQC,IAAIgD,EAASC,MATV,gDAWXlD,QAAQC,IAAR,MAXW,yD,EAefmF,gBAAkB,4BAAAL,EAAAC,OAAA,uDACVC,EAAW,CACfR,MAAO,EAAK/E,MAAM8E,aAAaC,MAAMN,MACrCS,SAAU,EAAKlF,MAAM8E,aAAaI,SAAST,MAC3Ce,mBAAmB,GAJL,oBAAAH,EAAA,MAOSpD,IAAMwD,KAAK,wGAAyGF,IAP7H,OAORhC,EAPQ,OASdjD,QAAQC,IAAIgD,EAASC,MATP,gDAWdlD,QAAQC,IAAR,MAXc,yD,EAelBoF,cAAgB,SAACC,GACfA,EAAMC,kB,EAyBRC,gBAAkB,SAACF,EAAOG,GACxB,IAAMjB,EAAY,gBAAO,EAAK9E,MAAM8E,cAC9BkB,EAAO,gBAAOlB,EAAaiB,IAEjCC,EAAQvB,MAAQmB,EAAMK,OAAOxB,MAC7BuB,EAAQ/B,SAAU,EAClB+B,EAAQhC,MAAQ,EAAKkC,gBAAgBF,EAAQvB,MAAOuB,EAAQhB,YAC5DF,EAAaiB,GAAeC,EAE5B,IAAInB,GAAc,EAClBrD,OAAOC,KAAKqD,GAAcjB,SAAQ,SAAAD,GAChCiB,EAAcC,EAAalB,GAAMI,OAASa,KAG5C,EAAK1E,SAAS,CACZ2E,eAAcD,iB,+EArCFJ,EAAOO,GACrB,IAAKA,EACH,OAAO,EAGT,IAAImB,GAAU,EAcd,OAZInB,EAAWC,WACbkB,EAA2B,KAAjB1B,EAAM2B,QAAiBD,GAG/BnB,EAAWD,QACboB,EAAUE,KAAGtB,MAAMN,IAAU0B,GAG3BnB,EAAWG,YACbgB,EAAU1B,EAAM1C,QAAUiD,EAAWG,WAAagB,GAG7CA,I,qCAsBO,IAAD,OACb,OAAO3E,OAAOC,KAAK/B,KAAKM,MAAM8E,cAAc3F,KAAI,SAAC4G,EAAa1G,GAC5D,IAAM2G,EAAU,EAAKhG,MAAM8E,aAAaiB,GACxC,OACE,kBAAC,GAAD,CACEzG,IAAKyG,EAAc1G,EACnB+B,KAAM4E,EAAQM,KACd7B,MAAOuB,EAAQvB,MACfT,MAAOgC,EAAQhC,MACfC,QAAS+B,EAAQ/B,QACjBjF,MAAOgH,EAAQhH,MACf2F,aAAcqB,EAAQrB,aACtBT,iBAAkB8B,EAAQhB,WAC1BN,SAAU,SAAAkB,GAAK,OAAI,EAAKE,gBAAgBF,EAAOG,W,+BAOrD,OACE,yBAAKtH,UAAWJ,KAAQuG,MACtB,6BACE,kGAEA,0BAAM2B,SAAU7G,KAAKiG,cAAelH,UAAWJ,KAAQmI,UAEpD9G,KAAK+G,eAEN,kBAAC,EAAD,CACErF,KAAK,UACLzC,QAASe,KAAK0F,aACd/D,UAAW3B,KAAKM,MAAM6E,aAHxB,kCAOA,kBAAC,EAAD,CACEzD,KAAK,UACLzC,QAASe,KAAKgG,gBACdrE,UAAW3B,KAAKM,MAAM6E,aAHxB,uH,GA/IsB/E,a,wCCsBnB4G,GA1BA,SAAAvI,GACb,IAAMkG,EAAO,UAAMlG,EAAMa,MAAZ,YAAqBsF,KAAKC,UAEvC,OACE,yBAAK9F,UAAWJ,KAAQqI,QACtB,2BAAOrC,QAASA,GAAUlG,EAAMa,OAChC,4BACE0B,GAAI2D,EACJI,MAAOtG,EAAMsG,MACbC,SAAUvG,EAAMuG,UAEfvG,EAAMwI,QAAQxH,KAAI,SAACyH,EAAQvH,GAC1B,OACE,4BACEoF,MAAOmC,EAAOnC,MACdnF,IAAKsH,EAAOnC,MAAQpF,GAEnBuH,EAAOjG,YCpBf,SAASkG,GAAcC,EAAQ9B,GACpC,OAAO,gBACF8B,EADL,CAEE9B,aACAhB,OAAQgB,EACRf,SAAS,EACTQ,MAAO,KAIJ,SAASsC,GAAStC,GAA2B,IAApBO,EAAmB,uDAAN,KAC3C,IAAKA,EACH,OAAO,EAGT,IAAImB,GAAU,EAId,OAHInB,EAAWC,WACbkB,EAA2B,KAAjB1B,EAAM2B,QAAiBD,GAE5BA,EAGF,SAASa,GAAalC,GAC3B,IAAID,GAAc,EAElB,IAAK,IAAImB,KAAWlB,EACdA,EAAamC,eAAejB,KAC9BnB,EAAcC,EAAakB,GAAShC,OAASa,GAIjD,OAAOA,ECvBT,SAASqC,GAAoBC,GAC3B,OAAON,GAAc,CACnB7H,MAAM,8CAAD,OAAamI,GAClBxC,aAAc,6JACdjE,GAAIyG,GACH,CAAClC,UAAU,IAGhB,SAASmC,KACP,MAAO,CACLnG,SAAU4F,GAAc,CACtB7H,MAAO,kFACP2F,aAAc,kJACb,CAACM,UAAU,IACdoC,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,GAC7BM,QAASN,GAAoB,I,IAIZO,G,2MAEnBzH,MAAQ,CACN6B,KAAM,GACNgD,aAAa,EACbhC,cAAe,EACfiC,aAAcsC,M,EAGhBzB,cAAgB,SAACC,GACfA,EAAMC,kB,EAGR6B,mBAAqB,SAAC9B,GACpBA,EAAMC,iBAEN,IAAMhE,EAAO,EAAK7B,MAAM6B,KAAK8F,SACvBtI,EAAQwC,EAAKE,OAAS,EAJE,EAMyB,EAAK/B,MAAM8E,aAA3D7D,EANuB,EAMvBA,SAAUoG,EANa,EAMbA,QAASC,EANI,EAMJA,QAASC,EANL,EAMKA,QAASC,EANd,EAMcA,QAEtCI,EAAe,CACnB3G,SAAUA,EAASwD,MACnB/D,GAAIrB,EACJwD,cAAe,EAAK7C,MAAM6C,cAC1BhC,QAAS,CACP,CAACF,KAAM0G,EAAQ5C,MAAO/D,GAAI2G,EAAQ3G,IAClC,CAACC,KAAM2G,EAAQ7C,MAAO/D,GAAI4G,EAAQ5G,IAClC,CAACC,KAAM4G,EAAQ9C,MAAO/D,GAAI6G,EAAQ7G,IAClC,CAACC,KAAM6G,EAAQ/C,MAAO/D,GAAI8G,EAAQ9G,MAItCmB,EAAKtD,KAAKqJ,GAEV,EAAKzH,SAAS,CACZ0B,OACAgD,aAAa,EACbhC,cAAe,EACfiC,aAAcsC,Q,EAIlBS,kBAAoB,SAAOjC,GAAP,SAAAP,EAAAC,OAAA,uDAClBM,EAAMC,iBADY,oBAAAR,EAAA,MAIVpD,EAAMwD,KAAK,eAAgB,EAAKzF,MAAM6B,OAJ5B,OAMhB,EAAK1B,SAAS,CACZ0B,KAAM,GACNgD,aAAa,EACbhC,cAAe,EACfiC,aAAcsC,OAVA,gDAchB9G,QAAQC,IAAR,MAdgB,yD,EAmBpBuH,cAAgB,SAACrD,EAAOsB,GACtB,IAAMjB,EAAY,gBAAO,EAAK9E,MAAM8E,cAC9BkB,EAAO,gBAAOlB,EAAaiB,IAEjCC,EAAQ/B,SAAU,EAClB+B,EAAQvB,MAAQA,EAChBuB,EAAQhC,MAAQ+C,GAASf,EAAQvB,MAAOuB,EAAQhB,YAEhDF,EAAaiB,GAAeC,EAE5B,EAAK7F,SAAS,CACZ2E,eACAD,YAAamC,GAAalC,M,EAyB9BiD,oBAAsB,SAAAnC,GACpB,EAAKzF,SAAS,CACZ0C,eAAgB+C,EAAMK,OAAOxB,S,gFAvBf,IAAD,OACf,OAAOjD,OAAOC,KAAK/B,KAAKM,MAAM8E,cAAc3F,KAAI,SAAC4G,EAAa1G,GAC5D,IAAM2G,EAAU,EAAKhG,MAAM8E,aAAaiB,GAExC,OACE,kBAAC,IAAMnG,SAAP,CAAgBN,IAAKyG,EAAc1G,GACjC,kBAAC,GAAD,CACEL,MAAOgH,EAAQhH,MACfyF,MAAOuB,EAAQvB,MACfT,MAAOgC,EAAQhC,MACfE,iBAAkB8B,EAAQhB,WAC1Bf,QAAS+B,EAAQ/B,QACjBU,aAAcqB,EAAQrB,aACtBD,SAAU,SAAAkB,GAAK,OAAI,EAAKkC,cAAclC,EAAMK,OAAOxB,MAAOsB,MAEjD,IAAV1G,EAAc,6BAAQ,W,+BAa7B,IAAM2I,EAAS,kBAAC,GAAD,CACbhJ,MAAM,+IACNyF,MAAO/E,KAAKM,MAAM6C,cAClB6B,SAAUhF,KAAKqI,oBACfpB,QAAS,CACP,CAAChG,KAAM,EAAG8D,MAAO,GACjB,CAAC9D,KAAM,EAAG8D,MAAO,GACjB,CAAC9D,KAAM,EAAG8D,MAAO,GACjB,CAAC9D,KAAM,EAAG8D,MAAO,MAGrB,OACE,yBAAKhG,UAAWJ,KAAQoJ,aACtB,6BACE,+GAEA,0BAAMlB,SAAU7G,KAAKiG,eAElBjG,KAAKuI,iBAELD,EAED,kBAAC,EAAD,CACE5G,KAAM,UACNzC,QAASe,KAAKgI,mBACdrG,UAAW3B,KAAKM,MAAM6E,aAHxB,yFAQA,kBAAC,EAAD,CACEzD,KAAM,UACNzC,QAASe,KAAKmI,kBACdxG,SAAqC,IAA3B3B,KAAKM,MAAM6B,KAAKE,QAH5B,8E,GAxI6BjC,aCR1BoI,OAbf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWxD,KAC/B,kBAAC,IAAD,CAAOuD,KAAK,gBAAgBC,UAAWX,KACvC,kBAAC,IAAD,CAAOU,KAAK,YAAYC,UAAW9F,IACnC,kBAAC,IAAD,CAAO6F,KAAK,IAAIC,UAAW1E,QCHrB2E,QACW,cAA7BtF,OAAOuF,SAASC,UAEe,UAA7BxF,OAAOuF,SAASC,UAEhBxF,OAAOuF,SAASC,SAASlF,MACvB,2DCXN,IAAMmF,GACJ,kBAAC,IAAD,KACE,kBAAC,GAAD,OAIJC,IAASC,OAAOF,GAAKG,SAASC,eAAe,SDsHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.274065b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer___UE0S\",\"close\":\"Drawer_close__2mRZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"main\":\"Layout_main__3wsBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"menuToggle_MenuToggle__1YU0Q\",\"open\":\"menuToggle_open__1uDDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__17VGf\",\"QuizWrapper\":\"Quiz_QuizWrapper__cvilm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2WmBE\",\"Question\":\"ActiveQuiz_Question__1X-g1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__35AXT\",\"success\":\"AnswerItem_success__kkB5J\",\"error\":\"AnswerItem_error__2_j5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2jfjf\",\"success\":\"FinishedQuiz_success__2X-yG\",\"error\":\"FinishedQuiz_error__1Zgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"error\":\"Button_error__2x9ii\",\"success\":\"Button_success__7bwOD\",\"primary\":\"Button_primary__1kzZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__Hfnoz\",\"Loader\":\"Loader_Loader__iJzyF\",\"lds-ripple\":\"Loader_lds-ripple__34XX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__34800\",\"AuthForm\":\"Auth_AuthForm__3NwNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"invalid\":\"Input_invalid__10T1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3cPEq\",\"shader\":\"Backdrop_shader__3Mk9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__rd1G1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__21UOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3QP2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__nk1Wf\"};","import React from 'react';\nimport classes from './menuToggle.module.css'\n\nconst MenuToggle = props => {\n  const cls = [\n    classes.MenuToggle,\n    'fa',\n  ]\n\n  if (props.isOpen) {\n    cls.push('fa-times')\n    cls.push(classes.open)\n  } else {\n    cls.push('fa-bars')\n  }\n\n  return (\n    <i\n    className={cls.join(' ')}\n    onClick={props.onToggle}\n    />\n  )\n}\n\nexport default MenuToggle","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst cls = [\n  classes.Backdrop,\n  // classes.shader\n]\n\nconst Backdrop = props => {\n\n  if (props.isOpen) {\n    cls.push('shader')\n  } else {\n    cls.push('shader')\n  }\n\n  return (\n    <div className={cls.join(' ')} onClick={props.onClick}/>\n  )\n}\n\nexport default Backdrop","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport classes from './Drawer.module.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst links = [\n  {to: '/', label: 'Список', exact: true},\n  {to: '/auth', label: 'Авторизация', exact: false},\n  {to: '/quiz-creator', label: 'Создать тест', exact: false},\n]\n\nclass Drawer extends Component {\n\n  renderLinks() {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.props.onClose}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    const cls = [classes.Drawer]\n\n    if (!this.props.isOpen) {\n      cls.push(classes.close)\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {this.renderLinks()}\n          </ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Drawer","import React, {Component} from 'react';\nimport classes from './Layout.module.css'\nimport MenuToggle from \"../../Components/Navigation/MenuToggle/menuToggle\";\nimport Drawer from \"../../Components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n\n  state ={\n    menu: false\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    })\n  }\n\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.toggleMenuHandler}\n        />\n\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n\n        <main className={classes.Layout}>\n          {this.props.children}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default Layout","import React from \"react\";\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props  => {\n    const cls = [classes.AnswerItem] // Массив классов\n\n    if (props.state) {\n        console.log('AnswerItem: props.state: ' + props.state)\n        cls.push(classes[props.state]) //Передаем в стиль для li success или error\n    }\n\n    return(\n        <li className={cls.join(' ')} //Добавляем к классу параметр\n        onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from \"react\";\nimport classes from './AnswersList.module.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => {\n  return(\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}  //Тернарный оператор - потому что по умолчанию state=null; для избежания ошибок; проверка, что он не null\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default AnswersList","import React from \"react\";\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n  <div className={classes.ActiveQuiz}>\n    <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}</strong>&nbsp;\n              {props.question}\n            </span>\n\n      <small>{props.answerNumber} из {props.quizLength}</small>\n    </p>\n\n    <AnswersList\n      state={props.state}\n      answers={props.answers}\n      onAnswerClick={props.onAnswerClick}\n    />\n  </div>\n)\n\nexport default ActiveQuiz","import React from \"react\";\nimport classes from './Button.module.css'\n\nconst Button = props => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ]\n\n  return (\n    <button\n    onClick={props.onClick}\n    className={cls.join(' ')}\n    disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button","import React from \"react\";\nimport {Link} from 'react-router-dom'\nimport classes from './FinishedQuiz.module.css'\nimport Button from '../UI/Button/Button'\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++\n    }\n    return total\n  }, 0)\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {console.log(props)}\n        {props.quiz.map((quizItem, index) => {\n            const cls = [\n              'fa',\n              props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n              classes[props.results[quizItem.id]]\n            ]\n\n            return <li\n              key={index}\n            >\n              <strong>{index + 1}</strong>. &nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')}/>\n\n            </li>\n          }\n        )}\n      </ul>\n\n      <p>{successCount} из {props.quiz.length}</p>\n\n      <div>\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n        <Link to={'/'}>\n          <Button type=\"success\">Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://reqct-quiz-1c5fd.firebaseio.com/'\n})","import React from 'react'\nimport classes from './Loader.module.css'\n\nexport default Loader => (\n  // https://loading.io/css\n  <div className={classes.center}>\n    <div className={classes.Loader}>\n      <div/>\n      <div/>\n    </div>\n  </div>\n)","import React, {Component} from \"react\";\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport axios from '../../axios/axios-quiz'\nimport Loader from \"../../Components/UI/Loader/Loader\";\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // { [id]: 'success' 'error' }\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // Для применения стилей в AnswerItem { [id]: 'success' 'error' }\n    quiz: [],\n    loading: true\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    console.log('Quiz: 50: ', answerId)\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        console.log('Quiz: return: ')\n        return\n      }\n    }\n\n    console.log('Quiz: Answer Id: ', answerId)\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      console.log(results[answerId])\n      // if (!results[answerId]) {\n      results[question.id] = 'success'\n      console.log('65' + results[answerId])\n      // }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        // results //results: results\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 200)\n\n\n    } else {\n      // if (!results[answerId]) {\n      results[question.id] = 'error'\n      console.log('97' + results[answerId])\n      // }\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        // results //results: results // (answerState)\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 500)\n    }\n  }\n\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length //return true if the last question\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n      const quiz = response.data\n\n      this.setState({\n        quiz,\n        loading: false\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.loading\n              ? <Loader/>\n              : this.state.isFinished\n              ? <FinishedQuiz\n                results={this.state.results}\n                quiz={this.state.quiz}\n                onRetry={this.retryHandler}\n              />\n              : <ActiveQuiz\n                question={this.state.quiz[this.state.activeQuestion].question}\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz","import React, {Component} from 'react'\nimport classes from './QuizList.module.css'\nimport {NavLink} from \"react-router-dom\"\nimport Loader from '../../Components/UI/Loader/Loader'\nimport axios from '../../axios/axios-quiz'\n\nexport default class QuizList extends Component {\n\n  state = {\n    quizes: [],\n    loading: true\n  }\n\n  renderQuizes() {\n    return this.state.quizes.map((quiz) => {\n      return (\n        <li\n          key={quiz.id}\n        >\n          <NavLink to={'/quiz/' + quiz.id}>\n            {quiz.name}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get('/quizes.json')\n\n      console.log(response.data)\n\n        const quizes = []\n\n        Object.keys(response.data).forEach((key, index) => {\n          quizes.push({\n            id: key,\n            name: `Тест №${index + 1}`\n          })\n        })\n\n      console.log(quizes)\n\n      this.setState({\n        quizes,\n        loading: false\n      })\n\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.QuizList}>\n        <div>\n        <h1>Список тестов</h1>\n\n          {\n            this.state.loading\n            ? <Loader />\n            : <ul>\n                { this.renderQuizes() }\n              </ul>\n          }\n\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched //Если контрол не валидированный и мы должны его валидировать и уже его потрогали - значит, что он невалидный\n}\n\nconst Input = props => {\n\n  const inputType = props.type || 'text' //text - по умолчанию\n  const cls = [classes.Input]\n  const htmlFor = `${inputType}-${Math.random()}` //Генерация индентефикатора для связывания в htmlFor (label - for)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n\n      {  //Если в функции тру - показать сообщение об ошибке\n        isInvalid(props)\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default Input","import React, {Component} from 'react'\nimport classes from './Auth.module.css'\nimport Button from '../../Components/UI/Button/Button'\nimport Input from \"../../Components/UI/Input/Input\"\nimport is from 'is_js'\nimport axios from 'axios'\n\nexport default class Auth extends Component {\n\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      },\n    }\n  }\n\n  loginHandler = async () => {\n    const authData = {\n      email: this.state.formControls.email.value,\n      password: this.state.formControls.password.value,\n      returnSecureToken: true\n    }\n    try {\n      const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAutWpLBopIEGajyXA_aw0aHGRg8x99VeU', authData)\n\n      console.log(response.data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  registerHandler = async () => {\n    const authData = {\n      email: this.state.formControls.email.value,\n      password: this.state.formControls.password.value,\n      returnSecureToken: true\n    }\n    try {\n      const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAutWpLBopIEGajyXA_aw0aHGRg8x99VeU', authData)\n\n      console.log(response.data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true //Если параметры не были переданы - не валидировать\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid //Если в строке что-то сдержится и проверка еще не была зафейлена\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n\n    return isValid\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = {...this.state.formControls} //Копия state\n    const control = {...formControls[controlName]}\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n    formControls[controlName] = control //Изменение состояния state после получений новых значений выше\n\n    let isFormValid = true\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid\n    })\n\n    this.setState({\n      formControls, isFormValid\n    })\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.Type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          errorMessage={control.errorMessage}\n          shouldValidate={!!control.validation} //Преобразование в булевый тип\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n            {this.renderInputs()}\n\n            <Button\n              type=\"success\"\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти</Button>\n\n            <Button\n              type=\"primary\"\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегестрироваться</Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport classes from './Select.module.css'\n\nconst Select = props => {\n  const htmlFor = `${props.label}-${Math.random()}`\n\n  return (\n    <div className={classes.Select}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <select\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.options.map((option, index) => {\n          return (\n            <option\n              value={option.value}\n              key={option.value + index}\n            >\n              {option.text}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Select","export function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: '',\n  }\n}\n\nexport function validate(value, validation = null) {// validation по умолчанию - null\n  if (!validation) {\n    return true\n  }\n\n  let isValid = true\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid\n  }\n  return isValid\n}\n\nexport function validateForm(formControls) {\n  let isFormValid = true\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) { //Если в корне formControls, для проверки только полей formControls\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}","import React, {Component} from 'react'\nimport classes from './QuizCreator.module.css'\nimport axios from '../../axios/axios-quiz'\nimport Button from \"../../Components/UI/Button/Button\"\nimport Input from \"../../Components/UI/Input/Input\"\nimport Select from \"../../Components/UI/Select/Select\";\nimport {createControl, validate, validateForm} from '../../Form/FormFramework'\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {required: true})\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым',\n    }, {required: true}),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4),\n  }\n}\n\nexport default class QuizCreator extends Component {\n\n  state = {\n    quiz: [],\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls()\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  addQuestionHandler = (event) => {\n    event.preventDefault()\n\n    const quiz = this.state.quiz.concat() // Клонирование массива\n    const index = quiz.length + 1\n\n    const {question, option1, option2, option3, option4} = this.state.formControls //Деструктуризация объекта formControls\n\n    const questionItem = {\n      question: question.value, // В этом объекте обращаемся к переменным из const выше\n      id: index,\n      rightAnswerId: this.state.rightAnswerId,\n      answers: [\n        {text: option1.value, id: option1.id},\n        {text: option2.value, id: option2.id},\n        {text: option3.value, id: option3.id},\n        {text: option4.value, id: option4.id},\n      ]\n    }\n\n    quiz.push(questionItem)\n\n    this.setState({\n      quiz,\n      isFormValid: false, // Обнуление состояния\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    })\n  }\n\n  createQuizHandler = async (event) => {\n    event.preventDefault()\n\n    try {\n      await axios.post('/quizes.json', this.state.quiz)\n\n      this.setState({ // Обнуление состояния\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      })\n\n    } catch (e) {\n      console.log(e)\n    }\n\n  }\n\n  changeHandler = (value, controlName) => {\n    const formControls = {...this.state.formControls} //Копия formControls\n    const control = {...formControls[controlName]}\n\n    control.touched = true\n    control.value = value\n    control.valid = validate(control.value, control.validation)\n\n    formControls[controlName] = control\n\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    })\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n\n      return (\n        <React.Fragment key={controlName + index}>\n          <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n          />\n          {index === 0 ? <hr/> : null}\n        </React.Fragment>\n      )\n    })\n  }\n\n  selectChangeHandler = event => {\n    this.setState({\n      rightAnswerId: +event.target.value //+ - приведение к числу\n    })\n  }\n\n  render() {\n    const select = <Select\n      label=\"Выберите правильный ответ\"\n      value={this.state.rightAnswerId}\n      onChange={this.selectChangeHandler}\n      options={[\n        {text: 1, value: 1},\n        {text: 2, value: 2},\n        {text: 3, value: 3},\n        {text: 4, value: 4}\n      ]}\n    />\n    return (\n      <div className={classes.QuizCreator}>\n        <div>\n          <h1>Создание теста</h1>\n\n          <form onSubmit={this.submitHandler}>\n\n            {this.renderControls()}\n\n            {select}\n\n            <Button\n              type={'primary'}\n              onClick={this.addQuestionHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Добавить вопрос\n            </Button>\n\n            <Button\n              type={'success'}\n              onClick={this.createQuizHandler}\n              disabled={this.state.quiz.length === 0}\n            >\n              Создать тест\n            </Button>\n\n          </form>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch} from 'react-router-dom'\nimport Quiz from \"./Containers/Quiz/Quiz\";\nimport QuizList from \"./Containers/QuizList/QuizList\";\nimport Auth from \"./Containers/Auth/Auth\";\nimport QuizCreator from \"./Containers/QuizCreator/QuizCreator\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n              <Route path='/auth' component={Auth} />\n              <Route path='/quiz-creator' component={QuizCreator} />\n              <Route path='/quiz/:id' component={Quiz} />\n              <Route path='/' component={QuizList} />\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}