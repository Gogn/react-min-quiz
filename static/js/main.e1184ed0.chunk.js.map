{"version":3,"sources":["Components/Navigation/Drawer/Drawer.module.css","hoc/Layout/Layout.module.css","Components/Navigation/MenuToggle/menuToggle.module.css","Containers/Quiz/Quiz.module.css","Components/ActiveQuiz/ActiveQuiz.module.css","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","Components/UI/Button/Button.module.css","Containers/Auth/Auth.module.css","Components/UI/Input/Input.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/ActiveQuiz/AnswersList/AnswersList.module.css","Containers/QuizList/QuizList.module.css","Components/Navigation/MenuToggle/menuToggle.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","Components/ActiveQuiz/AnswersList/AnswersList.js","Components/ActiveQuiz/ActiveQuiz.js","Components/UI/Button/Button.js","Components/FinishedQuiz/FinishedQuiz.js","Containers/Quiz/Quiz.js","Containers/QuizList/QuizList.js","Components/UI/Input/Input.js","Containers/Auth/Auth.js","Containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","map","link","index","key","activeClassName","active","onClose","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","children","AnswerItem","console","log","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","match","params","QuizWrapper","QuizList","renderQuizes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","Type","onSubmit","AuthForm","renderInputs","QuizCreator","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1184ed0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer___UE0S\",\"close\":\"Drawer_close__2mRZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"main\":\"Layout_main__3wsBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"menuToggle_MenuToggle__1YU0Q\",\"open\":\"menuToggle_open__1uDDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__17VGf\",\"QuizWrapper\":\"Quiz_QuizWrapper__cvilm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2WmBE\",\"Question\":\"ActiveQuiz_Question__1X-g1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__35AXT\",\"success\":\"AnswerItem_success__kkB5J\",\"error\":\"AnswerItem_error__2_j5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2jfjf\",\"success\":\"FinishedQuiz_success__2X-yG\",\"error\":\"FinishedQuiz_error__1Zgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"error\":\"Button_error__2x9ii\",\"success\":\"Button_success__7bwOD\",\"primary\":\"Button_primary__1kzZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__34800\",\"AuthForm\":\"Auth_AuthForm__3NwNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"invalid\":\"Input_invalid__10T1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3cPEq\",\"shader\":\"Backdrop_shader__3Mk9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__rd1G1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__21UOW\"};","import React from 'react';\nimport classes from './menuToggle.module.css'\n\nconst MenuToggle = props => {\n  const cls = [\n    classes.MenuToggle,\n    'fa',\n  ]\n\n  if (props.isOpen) {\n    cls.push('fa-times')\n    cls.push(classes.open)\n  } else {\n    cls.push('fa-bars')\n  }\n\n  return (\n    <i\n    className={cls.join(' ')}\n    onClick={props.onToggle}\n    />\n  )\n}\n\nexport default MenuToggle","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst cls = [\n  classes.Backdrop,\n  // classes.shader\n]\n\nconst Backdrop = props => {\n\n  if (props.isOpen) {\n    cls.push('shader')\n  } else {\n    cls.push('shader')\n  }\n\n  return (\n    <div className={cls.join(' ')} onClick={props.onClick}/>\n  )\n}\n\nexport default Backdrop","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport classes from './Drawer.module.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst links = [\n  {to: '/', label: 'Список', exact: true},\n  {to: '/auth', label: 'Авторизация', exact: false},\n  {to: '/quiz-creator', label: 'Создать тест', exact: false},\n]\n\nclass Drawer extends Component {\n\n  renderLinks() {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.props.onClose}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    const cls = [classes.Drawer]\n\n    if (!this.props.isOpen) {\n      cls.push(classes.close)\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {this.renderLinks()}\n          </ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Drawer","import React, {Component} from 'react';\nimport classes from './Layout.module.css'\nimport MenuToggle from \"../../Components/Navigation/MenuToggle/menuToggle\";\nimport Drawer from \"../../Components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n\n  state ={\n    menu: false\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    })\n  }\n\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.toggleMenuHandler}\n        />\n\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n\n        <main className={classes.Layout}>\n          {this.props.children}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default Layout","import React from \"react\";\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props  => {\n    const cls = [classes.AnswerItem] // Массив классов\n\n    if (props.state) {\n        console.log('AnswerItem: props.state: ' + props.state)\n        cls.push(classes[props.state]) //Передаем в стиль для li success или error\n    }\n\n    return(\n        <li className={cls.join(' ')} //Добавляем к классу параметр\n        onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from \"react\";\nimport classes from './AnswersList.module.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => {\n  return(\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}  //Тернарный оператор - потому что по умолчанию state=null; для избежания ошибок; проверка, что он не null\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default AnswersList","import React from \"react\";\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n  <div className={classes.ActiveQuiz}>\n    <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}</strong>&nbsp;\n              {props.question}\n            </span>\n\n      <small>{props.answerNumber} из {props.quizLength}</small>\n    </p>\n\n    <AnswersList\n      state={props.state}\n      answers={props.answers}\n      onAnswerClick={props.onAnswerClick}\n    />\n  </div>\n)\n\nexport default ActiveQuiz","import React from \"react\";\nimport classes from './Button.module.css'\n\nconst Button = props => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ]\n\n  return (\n    <button\n    onClick={props.onClick}\n    className={cls.join(' ')}\n    disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button","import React from \"react\";\nimport {Link} from 'react-router-dom'\nimport classes from './FinishedQuiz.module.css'\nimport Button from '../UI/Button/Button'\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++\n    }\n    return total\n  }, 0)\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {console.log(props)}\n        {props.quiz.map((quizItem, index) => {\n            const cls = [\n              'fa',\n              props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n              classes[props.results[quizItem.id]]\n            ]\n\n            return <li\n              key={index}\n            >\n              <strong>{index + 1}</strong>. &nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')}/>\n\n            </li>\n          }\n        )}\n      </ul>\n\n      <p>{successCount} из {props.quiz.length}</p>\n\n      <div>\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n        <Link to={'/'}>\n          <Button type=\"success\">Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz","import React, {Component} from \"react\";\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // { [id]: 'success' 'error' }\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // Для применения стилей в AnswerItem { [id]: 'success' 'error' }\n    quiz: [\n      {\n        id: 1,\n        question: 'Какая компания является разработчиком библиотеки React?',\n        rightAnswerId: 2,\n        answers: [\n          {text: 'Microsoft', id: 1},\n          {text: 'Facebook', id: 2},\n          {text: 'Apple', id: 3},\n          {text: 'Amazon', id: 4},\n        ]\n      },\n      {\n        id: 2,\n        question: 'Как выйти из vim?',\n        rightAnswerId: 3,\n        answers: [\n          {text: 'Alt+F4', id: 1},\n          {text: '`Esc`', id: 2},\n          {text: ':q!', id: 3},\n          {text: 'Из vim нет выхода', id: 4},\n        ]\n      },\n      {\n        id: 3,\n        question: 'Что такое JSX?',\n        rightAnswerId: 1,\n        answers: [\n          {text: 'Расширение JavaScript, которое позволяет использовать схожий с HTML синтаксис для описания интерфейса', id: 1},\n          {text: 'То же самое, что XML', id: 2},\n          {text: 'Современная NoSQL СУБД', id: 3},\n          {text: 'Диалект Java', id: 4},\n        ]\n      },\n    ]\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    console.log('Quiz: 50: ', answerId)\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        console.log('Quiz: return: ')\n        return\n      }\n    }\n\n    console.log('Quiz: Answer Id: ', answerId)\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      console.log(results[answerId])\n      // if (!results[answerId]) {\n      results[question.id] = 'success'\n      console.log('65' + results[answerId])\n      // }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        // results //results: results\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 200)\n\n      // } else {\n      //   results[answerId] = 'error'\n      //   this.setState({\n      //     answerState: {[answerId]: 'error'},\n      //     results\n      //   })\n      // }\n\n    } else {\n      // if (!results[answerId]) {\n      results[question.id] = 'error'\n      console.log('97' + results[answerId])\n      // }\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        // results //results: results // (answerState)\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 500)\n    }\n  }\n\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length //return true if the last question\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  componentDidMount() {\n    console.log('Quiz ID = ', this.props.match.params.id)\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.isFinished\n              ? <FinishedQuiz\n                results={this.state.results}\n                quiz={this.state.quiz}\n                onRetry={this.retryHandler}\n              />\n              : <ActiveQuiz\n                question={this.state.quiz[this.state.activeQuestion].question}\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz","import React, {Component} from 'react'\nimport classes from './QuizList.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nexport default class QuizList extends Component {\n\n  renderQuizes() {\n    return [1, 2, 3].map((quiz, index) => {\n      return (\n        <li\n          key={index}\n        >\n          <NavLink to={'/quiz/' + quiz}>\n            Тест {quiz}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.QuizList}>\n        <div>\n        <h1>Список тестов</h1>\n\n          <ul>\n            { this.renderQuizes() }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched //Если контрол не валидированный и мы должны его валидировать и уже его потрогали - значит, что он невалидный\n}\n\nconst Input = props => {\n\n  const inputType = props.type || 'text' //text - по умолчанию\n  const cls = [classes.Input]\n  const htmlFor = `${inputType}-${Math.random()}` //Генерация индентефикатора для связывания в htmlFor (label - for)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n\n      {  //Если в функции тру - показать сообщение об ошибке\n        isInvalid(props)\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default Input","import React, {Component} from 'react'\nimport classes from './Auth.module.css'\nimport Button from '../../Components/UI/Button/Button'\nimport Input from \"../../Components/UI/Input/Input\"\nimport is from 'is_js'\n\nexport default class Auth extends Component {\n\n  state = {\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      },\n    }\n  }\n\n  loginHandler = () => {\n\n  }\n\n  registerHandler = () => {\n\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  validateControl (value, validation) {\n    if (!validation) {\n      return true //Если параметры не были переданы - не валидировать\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid //Если в строке что-то сдержится и проверка еще не была зафейлена\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n\n    return isValid\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls } //Копия state\n    const control = { ...formControls[controlName] }\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n    formControls[controlName] = control //Изменение состояния state после получений новых значений выше\n\n    this.setState({\n      formControls\n    })\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.Type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          errorMessage={control.errorMessage}\n          shouldValidate={!!control.validation} //Преобразование в булевый тип\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n            { this.renderInputs() }\n\n            <Button\n              type=\"success\"\n              onClick={this.loginHandler}\n            >\n              Войти</Button>\n\n            <Button\n              type=\"primary\"\n              onClick={this.registerHandler}\n            >\n              Зарегестрироваться</Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react'\n\nexport default class QuizCreator extends Component {\n  render() {\n    return (\n      <div>\n        <h1>QuizCreator</h1>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch} from 'react-router-dom'\nimport Quiz from \"./Containers/Quiz/Quiz\";\nimport QuizList from \"./Containers/QuizList/QuizList\";\nimport Auth from \"./Containers/Auth/Auth\";\nimport QuizCreator from \"./Containers/QuizCreator/QuizCreator\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n              <Route path='/auth' component={Auth} />\n              <Route path='/quiz-creator' component={QuizCreator} />\n              <Route path='/quiz/:id' component={Quiz} />\n              <Route path='/' component={QuizList} />\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}