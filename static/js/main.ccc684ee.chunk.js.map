{"version":3,"sources":["Containers/Quiz/Quiz.module.css","Components/ActiveQuiz/ActiveQuiz.module.css","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","hoc/Layout/Layout.module.css","Components/ActiveQuiz/AnswersList/AnswersList.module.css","hoc/Layout/Layout.js","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","Components/ActiveQuiz/AnswersList/AnswersList.js","Components/ActiveQuiz/ActiveQuiz.js","Components/FinishedQuiz/FinishedQuiz.js","Containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","AnswerItem","cls","state","console","log","push","join","onClick","onAnswerClick","answer","id","text","AnswersList","answers","map","index","key","ActiveQuiz","Question","answerNumber","question","quizLength","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccc684ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__17VGf\",\"QuizWrapper\":\"Quiz_QuizWrapper__cvilm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2WmBE\",\"Question\":\"ActiveQuiz_Question__1X-g1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__35AXT\",\"success\":\"AnswerItem_success__kkB5J\",\"error\":\"AnswerItem_error__2_j5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2jfjf\",\"success\":\"FinishedQuiz_success__2X-yG\",\"error\":\"FinishedQuiz_error__1Zgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"main\":\"Layout_main__3wsBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__rd1G1\"};","import React, {Component} from 'react';\nimport classes from './Layout.module.css'\n\nclass Layout extends Component {\n  render() {\n    return (\n      <div>\n        <main className={classes.Layout}>\n          {this.props.children}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default Layout","import React from \"react\";\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props  => {\n    const cls = [classes.AnswerItem] // Массив классов\n\n    if (props.state) {\n        console.log('AnswerItem: props.state: ' + props.state)\n        cls.push(classes[props.state]) //Передаем в стиль для li success или error\n    }\n\n    return(\n        <li className={cls.join(' ')} //Добавляем к классу параметр\n        onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from \"react\";\nimport classes from './AnswersList.module.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => {\n  return(\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}  //Тернарный оператор - потому что по умолчанию state=null; для избежания ошибок; проверка, что он не null\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default AnswersList","import React from \"react\";\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n  <div className={classes.ActiveQuiz}>\n    <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}</strong>&nbsp;\n              {props.question}\n            </span>\n\n      <small>{props.answerNumber} из {props.quizLength}</small>\n    </p>\n\n    <AnswersList\n      state={props.state}\n      answers={props.answers}\n      onAnswerClick={props.onAnswerClick}\n    />\n  </div>\n)\n\nexport default ActiveQuiz","import React from \"react\";\nimport classes from './FinishedQuiz.module.css'\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key)=>{\n    if (props.results[key] == 'success') {\n      total++\n    }\n    return total\n  }, 0)\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {console.log(props)}\n        {props.quiz.map((quizItem, index) => {\n          const cls = [\n            'fa',\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n            classes[props.results[quizItem.id]]\n          ]\n\n          return <li\n            key={index}\n          >\n            <strong>{index+1}</strong>. &nbsp;\n            {quizItem.question}\n            <i className={cls.join(' ')} />\n\n          </li>\n          }\n        )}\n      </ul>\n\n      <p>{successCount} из {props.quiz.length}</p>\n\n      <div>\n        <button onClick={props.onRetry}>Повторить</button>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz","import React, {Component} from \"react\";\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // { [id]: 'success' 'error' }\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // Для применения стилей в AnswerItem { [id]: 'success' 'error' }\n    quiz: [\n      {\n        id: 1,\n        question: 'Как выйти из vim?',\n        rightAnswerId: 3,\n        answers: [\n          {text: 'Alt+F4', id: 1},\n          {text: '`Esc`', id: 2},\n          {text: ':q!', id: 3},\n          {text: 'Из vim нет выхода', id: 4},\n        ]\n      },\n      {\n        id: 2,\n        question: 'Какая компания является разработчиком библиотеки React?',\n        rightAnswerId: 2,\n        answers: [\n          {text: 'Microsoft', id: 1},\n          {text: 'Facebook', id: 2},\n          {text: 'Apple', id: 3},\n          {text: 'Amazon', id: 4},\n        ]\n      },\n      {\n        id: 3,\n        question: 'Вопрос 3?',\n        rightAnswerId: 1,\n        answers: [\n          {text: 'Microsoft', id: 1},\n          {text: 'Facebook', id: 2},\n          {text: 'Apple', id: 3},\n          {text: 'Amazon', id: 4},\n        ]\n      },\n    ]\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    console.log('Quiz: 50: ', answerId)\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        console.log('Quiz: return: ')\n        return\n      }\n    }\n\n    console.log('Quiz: Answer Id: ', answerId)\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      console.log(results[answerId])\n      // if (!results[answerId]) {\n      results[question.id] = 'success'\n      console.log('65' + results[answerId])\n      // }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        // results //results: results\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 200)\n\n      // } else {\n      //   results[answerId] = 'error'\n      //   this.setState({\n      //     answerState: {[answerId]: 'error'},\n      //     results\n      //   })\n      // }\n\n    } else {\n      // if (!results[answerId]) {\n      results[question.id] = 'error'\n      console.log('97' + results[answerId])\n      // }\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        // results //results: results // (answerState)\n      })\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n\n        if (this.isQuizFinished()) {\n          console.log('isQuizFinished')\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null //Очищение стилей\n          })\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 500)\n    }\n  }\n\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length //return true if the last question\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.isFinished\n              ? <FinishedQuiz\n                results={this.state.results}\n                quiz={this.state.quiz}\n                onRetry={this.retryHandler}\n              />\n              : <ActiveQuiz\n                question={this.state.quiz[this.state.activeQuestion].question}\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz","import React from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./Containers/Quiz/Quiz\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Quiz />\n        </Layout>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}