{"version":3,"sources":["Components/Navigation/Drawer/Drawer.module.css","hoc/Layout/Layout.module.css","Components/Navigation/MenuToggle/menuToggle.module.css","Containers/Quiz/Quiz.module.css","Components/ActiveQuiz/ActiveQuiz.module.css","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","Components/UI/Button/Button.module.css","Components/UI/Loader/Loader.module.css","Containers/Auth/Auth.module.css","Components/UI/Input/Input.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/ActiveQuiz/AnswersList/AnswersList.module.css","Containers/QuizList/QuizList.module.css","Containers/QuizCreator/QuizCreator.module.css","Components/UI/Select/Select.module.css","Components/Navigation/MenuToggle/menuToggle.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","Components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","Components/ActiveQuiz/AnswersList/AnswersList.js","Components/ActiveQuiz/ActiveQuiz.js","Components/UI/Button/Button.js","Components/FinishedQuiz/FinishedQuiz.js","Components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","Containers/Quiz/Quiz.js","Containers/QuizList/QuizList.js","Components/UI/Input/Input.js","store/actions/auth.js","Containers/Auth/Auth.js","Components/UI/Select/Select.js","Form/FormFramework.js","Containers/QuizCreator/QuizCreator.js","store/actions/create.js","Components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","links","map","link","index","key","to","exact","activeClassName","active","onClose","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","children","connect","auth","token","AnswerItem","console","log","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","quizSetState","answerState","quizNextQuestion","number","isQuizFinished","activeQuestion","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizAnswerClick","dispatch","quizId","a","async","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","Type","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","routes","path","component","withRouter","Boolean","location","hostname","initialState","error","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5214ffc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer___UE0S\",\"close\":\"Drawer_close__2mRZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"main\":\"Layout_main__3wsBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"menuToggle_MenuToggle__1YU0Q\",\"open\":\"menuToggle_open__1uDDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__17VGf\",\"QuizWrapper\":\"Quiz_QuizWrapper__cvilm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2WmBE\",\"Question\":\"ActiveQuiz_Question__1X-g1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__35AXT\",\"success\":\"AnswerItem_success__kkB5J\",\"error\":\"AnswerItem_error__2_j5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2jfjf\",\"success\":\"FinishedQuiz_success__2X-yG\",\"error\":\"FinishedQuiz_error__1Zgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"error\":\"Button_error__2x9ii\",\"success\":\"Button_success__7bwOD\",\"primary\":\"Button_primary__1kzZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__Hfnoz\",\"Loader\":\"Loader_Loader__iJzyF\",\"lds-ripple\":\"Loader_lds-ripple__34XX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__34800\",\"AuthForm\":\"Auth_AuthForm__3NwNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"invalid\":\"Input_invalid__10T1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3cPEq\",\"shader\":\"Backdrop_shader__3Mk9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__rd1G1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__21UOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3QP2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__nk1Wf\"};","import React from 'react';\nimport classes from './menuToggle.module.css'\n\nconst MenuToggle = props => {\n  const cls = [\n    classes.MenuToggle,\n    'fas',\n  ]\n\n  if (props.isOpen) {\n    cls.push('fa-times')\n    cls.push(classes.open)\n  } else {\n    cls.push('fa-bars')\n  }\n\n  return (\n    <i\n    className={cls.join(' ')}\n    onClick={props.onToggle}\n    />\n  )\n}\n\nexport default MenuToggle","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst cls = [\n  classes.Backdrop,\n  // classes.shader\n]\n\nconst Backdrop = props => {\n\n  if (props.isOpen) {\n    cls.push('shader')\n  } else {\n    cls.push('shader')\n  }\n\n  return (\n    <div className={cls.join(' ')} onClick={props.onClick}/>\n  )\n}\n\nexport default Backdrop","import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom'\nimport classes from './Drawer.module.css'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nclass Drawer extends Component {\n\n  renderLinks(links) {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.props.onClose}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    const cls = [classes.Drawer]\n\n    if (!this.props.isOpen) {\n      cls.push(classes.close)\n    }\n\n    const links = [\n      {to: '/', label: 'Список', exact: true}\n    ]\n\n    if (this.props.isAuthenticated) {\n      links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\n      links.push({to: '/logout', label: 'Выйти', exact: false})\n    } else {\n      links.push({to: '/auth', label: 'Авторизация', exact: false})\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {this.renderLinks(links)}\n          </ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Drawer","import React, {Component} from 'react';\nimport classes from './Layout.module.css'\nimport MenuToggle from \"../../Components/Navigation/MenuToggle/menuToggle\";\nimport Drawer from \"../../Components/Navigation/Drawer/Drawer\";\nimport {connect} from \"react-redux\";\n\nclass Layout extends Component {\n\n  state ={\n    menu: false\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    })\n  }\n\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.toggleMenuHandler}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n\n        <MenuToggle\n        onToggle={this.toggleMenuHandler}\n        isOpen={this.state.menu}\n        />\n\n        <main className={classes.Layout}>\n          {this.props.children}\n        </main>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nexport default connect(mapStateToProps)(Layout)","import React from \"react\";\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props  => {\n    const cls = [classes.AnswerItem] // Массив классов\n\n    if (props.state) {\n        console.log('AnswerItem: props.state: ' + props.state)\n        cls.push(classes[props.state]) //Передаем в стиль для li success или error\n    }\n\n    return(\n        <li className={cls.join(' ')} //Добавляем к классу параметр\n        onClick={()=>props.onAnswerClick(props.answer.id)}\n        >\n            {props.answer.text}\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from \"react\";\nimport classes from './AnswersList.module.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => {\n  return(\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}  //Тернарный оператор - потому что по умолчанию state=null; для избежания ошибок; проверка, что он не null\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default AnswersList","import React from \"react\";\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n  <div className={classes.ActiveQuiz}>\n    <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}</strong>&nbsp;\n              {props.question}\n            </span>\n\n      <small>{props.answerNumber} из {props.quizLength}</small>\n    </p>\n\n    <AnswersList\n      state={props.state}\n      answers={props.answers}\n      onAnswerClick={props.onAnswerClick}\n    />\n  </div>\n)\n\nexport default ActiveQuiz","import React from \"react\";\nimport classes from './Button.module.css'\n\nconst Button = props => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ]\n\n  return (\n    <button\n    onClick={props.onClick}\n    className={cls.join(' ')}\n    disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button","import React from \"react\";\nimport {Link} from 'react-router-dom'\nimport classes from './FinishedQuiz.module.css'\nimport Button from '../UI/Button/Button'\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++\n    }\n    return total\n  }, 0)\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {console.log(props)}\n        {props.quiz.map((quizItem, index) => {\n            const cls = [\n              'fa',\n              props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n              classes[props.results[quizItem.id]]\n            ]\n\n            return <li\n              key={index}\n            >\n              <strong>{index + 1}</strong>. &nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')}/>\n\n            </li>\n          }\n        )}\n      </ul>\n\n      <p>{successCount} из {props.quiz.length}</p>\n\n      <div>\n        <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n        <Link to={'/'}>\n          <Button type=\"success\">Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz","import React from 'react'\nimport classes from './Loader.module.css'\n\nexport default Loader => (\n  // https://loading.io/css\n  <div className={classes.center}>\n    <div className={classes.Loader}>\n      <div/>\n      <div/>\n    </div>\n  </div>\n)","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://reqct-quiz-1c5fd.firebaseio.com/'\n})","import axios from \"../../axios/axios-quiz\";\nimport {\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FETCH_QUIZ_SUCCESS,\n  QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY\n} from \"./actionTypes\";\n\nexport function fetchQuizes() {\n  return async dispatch => {\n    dispatch(fetchQuizesStart())\n    try {\n      const response = await axios.get('/quizes.json')\n\n      const quizes = []\n\n      Object.keys(response.data).forEach((key, index) => {\n        quizes.push({\n          id: key,\n          name: `Тест №${index + 1}`\n        })\n      })\n\n      console.log(quizes)\n\n      dispatch(fetchQuizesSuccess(quizes))\n    } catch (e) {\n      dispatch(fetchQuizesError())\n    }\n  }\n}\n\nexport function fetchQuizById(quizId) {\n  return async dispatch => {\n    dispatch(fetchQuizesStart())\n\n    try {\n      const response = await axios.get(`/quizes/${quizId}.json`)\n      const quiz = response.data\n\n      dispatch(fetchQuizSuccess(quiz))\n    } catch (e) {\n      dispatch(fetchQuizesError(e))\n    }\n  }\n}\n\nexport function fetchQuizSuccess(quiz) {\n  return {\n    quiz,\n    type: 'FETCH_QUIZ_SUCCESS'\n  }\n}\n\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START\n  }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes\n  }\n}\n\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR\n  }\n}\n\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState, results\n  }\n}\n\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ\n  }\n}\n\nexport function quizNextQuestion(number) {\n  return {\n    type: QUIZ_NEXT_QUESTION,\n    number\n  }\n}\n\nexport function retryQuiz() {\n  return {\n    type: QUIZ_RETRY\n  }\n}\n\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz\n    console.log('Quiz: 50: ', answerId)\n\n    if (state.answerState) {\n      const key = Object.keys(state.answerState)[0]\n      if (state.answerState[key] === 'success') {\n        console.log('Quiz: return: ')\n        return\n      }\n    }\n\n    console.log('Quiz: Answer Id: ', answerId)\n\n    const question = state.quiz[state.activeQuestion]\n    const results = state.results\n\n    if (question.rightAnswerId === answerId) {\n      console.log(results[answerId])\n      results[question.id] = 'success'\n      console.log('65' + results[answerId])\n\n      dispatch(quizSetState({[answerId]: 'success'}, results))\n\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n        if (isQuizFinished(state)) {\n          console.log('isQuizFinished')\n          dispatch(finishQuiz())\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 500)\n\n\n    } else {\n      results[question.id] = 'error'\n      dispatch(quizSetState({[answerId]: 'error'}, results))\n\n      const timeout = window.setTimeout(() => {\n        console.log('Quiz: results: ', results)\n\n        if (isQuizFinished(state)) {\n          console.log('isQuizFinished')\n          dispatch(finishQuiz())\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\n        }\n        window.clearTimeout(timeout) //Очищение таймаута для предотвращения утечки памяти\n      }, 500)\n    }\n  }\n}\n\nfunction isQuizFinished(state) {\n  return state.activeQuestion + 1 === state.quiz.length\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import React, {Component} from \"react\";\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../Components/UI/Loader/Loader\";\nimport {connect} from \"react-redux\";\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n\n  async componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id)\n  }\n\ncomponentWillUnmount() {\n    this.props.retryQuiz()\n}\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.props.loading || !this.props.quiz\n              ? <Loader/>\n              : this.props.isFinished\n              ? <FinishedQuiz\n                results={this.props.results}\n                quiz={this.props.quiz}\n                onRetry={this.props.retryQuiz}\n              />\n              : <ActiveQuiz\n                answers={this.props.quiz[this.props.activeQuestion].answers}\n                question={this.props.quiz[this.props.activeQuestion].question}\n                onAnswerClick={this.props.quizAnswerClick}\n                quizLength={this.props.quiz.length}\n                answerNumber={this.props.activeQuestion + 1}\n                state={this.props.answerState}\n              />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\nimport classes from './QuizList.module.css'\nimport {NavLink} from \"react-router-dom\"\nimport Loader from '../../Components/UI/Loader/Loader'\nimport {connect} from \"react-redux\";\nimport {fetchQuizes} from \"../../store/actions/quiz\";\n\nclass QuizList extends Component {\n\n  renderQuizes() {\n    return this.props.quizes.map((quiz) => {\n      return (\n        <li\n          key={quiz.id}\n        >\n          <NavLink to={'/quiz/' + quiz.id}>\n            {quiz.name}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  componentDidMount() {\n    this.props.fetchQuizes()\n  }\n\n  render() {\n    return (\n      <div className={classes.QuizList}>\n        <div>\n        <h1>Список тестов</h1>\n\n          {\n            this.props.loading && this.props.quizes.length !== 0\n            ? <Loader />\n            : <ul>\n                { this.renderQuizes() }\n              </ul>\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizes: () => dispatch(fetchQuizes())\n  }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched //Если контрол не валидированный и мы должны его валидировать и уже его потрогали - значит, что он невалидный\n}\n\nconst Input = props => {\n\n  const inputType = props.type || 'text' //text - по умолчанию\n  const cls = [classes.Input]\n  const htmlFor = `${inputType}-${Math.random()}` //Генерация индентефикатора для связывания в htmlFor (label - for)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n\n      {  //Если в функции тру - показать сообщение об ошибке\n        isInvalid(props)\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default Input","import axios from \"axios\";\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\n\n\nexport function auth(email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email, password,\n      returnSecureToken: true\n    }\n\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAutWpLBopIEGajyXA_aw0aHGRg8x99VeU'\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAutWpLBopIEGajyXA_aw0aHGRg8x99VeU'\n    }\n\n    const response = await axios.post(url, authData)\n    const data = response.data\n\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n    localStorage.setItem('token', data.idToken)\n    localStorage.setItem('userId', data.localId)\n    localStorage.setItem('expirationDate', expirationDate)\n\n    dispatch(authSuccess(data.idToken))\n    dispatch(autoLogout(data.expiresIn))\n  }\n}\n\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, time * 1000)\n  }\n}\n\nexport function logout() {\n  localStorage.removeItem('token')\n  localStorage.removeItem('userId')\n  localStorage.removeItem('expirationDate')\n  return {\n    type: AUTH_LOGOUT\n  }\n}\n\nexport function autoLogin() {\n  return dispatch => {\n    const token = localStorage.getItem('token')\n    if (!token) {\n      dispatch(logout())\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\n      if (expirationDate <= new Date()) {\n        dispatch(logout())\n      } else {\n        dispatch(authSuccess(token))\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\n      }\n    }\n  }\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  }\n}","import React, {Component} from 'react'\nimport classes from './Auth.module.css'\nimport Button from '../../Components/UI/Button/Button'\nimport Input from \"../../Components/UI/Input/Input\"\nimport is from 'is_js'\nimport {connect} from \"react-redux\";\nimport {auth} from \"../../store/actions/auth\";\n\nclass Auth extends Component {\n\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      },\n    }\n  }\n\n  loginHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      true\n    )\n  }\n\n  registerHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      false\n    )\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true //Если параметры не были переданы - не валидировать\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid //Если в строке что-то сдержится и проверка еще не была зафейлена\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n\n    return isValid\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = {...this.state.formControls} //Копия state\n    const control = {...formControls[controlName]}\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n    formControls[controlName] = control //Изменение состояния state после получений новых значений выше\n\n    let isFormValid = true\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid\n    })\n\n    this.setState({\n      formControls, isFormValid\n    })\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.Type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          errorMessage={control.errorMessage}\n          shouldValidate={!!control.validation} //Преобразование в булевый тип\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n            {this.renderInputs()}\n\n            <Button\n              type=\"success\"\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти</Button>\n\n            <Button\n              type=\"primary\"\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегестрироваться</Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\nimport classes from './Select.module.css'\n\nconst Select = props => {\n  const htmlFor = `${props.label}-${Math.random()}`\n\n  return (\n    <div className={classes.Select}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <select\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.options.map((option, index) => {\n          return (\n            <option\n              value={option.value}\n              key={option.value + index}\n            >\n              {option.text}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Select","export function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: '',\n  }\n}\n\nexport function validate(value, validation = null) {// validation по умолчанию - null\n  if (!validation) {\n    return true\n  }\n\n  let isValid = true\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid\n  }\n  return isValid\n}\n\nexport function validateForm(formControls) {\n  let isFormValid = true\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) { //Если в корне formControls, для проверки только полей formControls\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}","import React, {Component} from 'react'\nimport classes from './QuizCreator.module.css'\nimport axios from '../../axios/axios-quiz'\nimport Button from \"../../Components/UI/Button/Button\"\nimport Input from \"../../Components/UI/Input/Input\"\nimport Select from \"../../Components/UI/Select/Select\";\nimport {createControl, validate, validateForm} from '../../Form/FormFramework'\nimport {connect} from \"react-redux\";\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {required: true})\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым',\n    }, {required: true}),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4),\n  }\n}\n\nclass QuizCreator extends Component {\n\n  state = {\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls()\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  addQuestionHandler = (event) => {\n    event.preventDefault()\n\n    const {question, option1, option2, option3, option4} = this.state.formControls //Деструктуризация объекта formControls\n\n    const questionItem = {\n      question: question.value, // В этом объекте обращаемся к переменным из const выше\n      id: this.props.quiz.length + 1,\n      rightAnswerId: this.state.rightAnswerId,\n      answers: [\n        {text: option1.value, id: option1.id},\n        {text: option2.value, id: option2.id},\n        {text: option3.value, id: option3.id},\n        {text: option4.value, id: option4.id},\n      ]\n    }\n\n    this.props.createQuizQuestion(questionItem)\n\n    this.setState({\n      isFormValid: false, // Обнуление состояния\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    })\n  }\n\n  createQuizHandler = (event) => {\n    event.preventDefault()\n\n      axios.post('/quizes.json', this.state.quiz)\n\n      this.setState({ // Обнуление состояния\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      })\n      this.props.finishCreateQuiz()\n  }\n\n  changeHandler = (value, controlName) => {\n    const formControls = {...this.state.formControls} //Копия formControls\n    const control = {...formControls[controlName]}\n\n    control.touched = true\n    control.value = value\n    control.valid = validate(control.value, control.validation)\n\n    formControls[controlName] = control\n\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    })\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n\n      return (\n        <React.Fragment key={controlName + index}>\n          <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n          />\n          {index === 0 ? <hr/> : null}\n        </React.Fragment>\n      )\n    })\n  }\n\n  selectChangeHandler = event => {\n    this.setState({\n      rightAnswerId: +event.target.value //+ - приведение к числу\n    })\n  }\n\n  render() {\n    const select = <Select\n      label=\"Выберите правильный ответ\"\n      value={this.state.rightAnswerId}\n      onChange={this.selectChangeHandler}\n      options={[\n        {text: 1, value: 1},\n        {text: 2, value: 2},\n        {text: 3, value: 3},\n        {text: 4, value: 4}\n      ]}\n    />\n    return (\n      <div className={classes.QuizCreator}>\n        <div>\n          <h1>Создание теста</h1>\n\n          <form onSubmit={this.submitHandler}>\n\n            {this.renderControls()}\n\n            {select}\n\n            <Button\n              type={'primary'}\n              onClick={this.addQuestionHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Добавить вопрос\n            </Button>\n\n            <Button\n              type={'success'}\n              onClick={this.createQuizHandler}\n              disabled={this.props.quiz.length === 0}\n            >\n              Создать тест\n            </Button>\n\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.create.quiz\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\nimport axios from '../../axios/axios-quiz'\nexport function createQuizQuestion(item) {\n  return {\n    type: CREATE_QUIZ_QUESTION,\n    item\n  }\n}\n\nexport function resetQuizCreation() {\n  return {\n    type: RESET_QUIZ_CREATION\n  }\n}\n\nexport function finishCreateQuiz() {\n  return async (dispatch, getState) => {\n    await axios.post('/quizes.json', getState().create.quiz)\n    dispatch(resetQuizCreation())\n  }\n\n}","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {auth, logout} from \"../../store/actions/auth\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout()\n  }\n\n  render() {\n    return <Redirect to={'/'} />\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from \"./Containers/Quiz/Quiz\";\nimport QuizList from \"./Containers/QuizList/QuizList\";\nimport Auth from \"./Containers/Auth/Auth\";\nimport QuizCreator from \"./Containers/QuizCreator/QuizCreator\";\nimport {connect} from \"react-redux\";\nimport Logout from \"./Components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth}/>\n        <Route path='/quiz/:id' component={Quiz}/>\n        <Route path='/' exact component={QuizList}/>\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator}/>\n          <Route path='/quiz/:id' component={Quiz}/>\n          <Route path='/logout' component={Logout}/>\n          <Route path='/' exact component={QuizList}/>\n          <Redirect to='/'/>\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZ_SUCCESS,\n  QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  results: {}, // { [id]: 'success' 'error' }\n  isFinished: false,\n  activeQuestion: 0,\n  answerState: null, // Для применения стилей в AnswerItem { [id]: 'success' 'error' }\n  quiz: null\n}\n\nexport default function quizReducer(state = initialState, action) {\n\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return {\n        ...state, loading: true\n      }\n    case FETCH_QUIZES_SUCCESS:\n      return {\n        ...state, loading: false, quizes: action.quizes\n      }\n    case FETCH_QUIZES_ERROR:\n      return {\n        ...state, loading: false, error: action.error\n      }\n    case FETCH_QUIZ_SUCCESS:\n      return {\n        ...state, loading: false, quiz: action.quiz\n      }\n    case QUIZ_SET_STATE:\n      return {\n        ...state, answerState: action.answerState, results: action.results\n      }\n    case FINISH_QUIZ:\n      return {\n        ...state, isFinished: true\n      }\n    case QUIZ_NEXT_QUESTION:\n      return {\n        ...state, answerState: null, activeQuestion: action.number\n      }\n    case QUIZ_RETRY:\n      return {\n        ...state,\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      }\n    default:\n      return state\n  }\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\n\nconst  initialState = {\n  quiz: []\n}\n\nexport default function createReducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_QUIZ_QUESTION:\n      return {\n        ...state,\n        quiz: [...state.quiz, action.item]\n      }\n    case RESET_QUIZ_CREATION:\n      return {\n        ...state,\n        quiz: []\n      }\n    default:\n      return state\n  }\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token\n      }\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null\n      }\n    default:\n      return state\n  }\n}","import {combineReducers} from \"redux\";\nimport quizReducer from \"./quiz\";\nimport createReducer from \"./create\";\nimport authReducer from \"./auth\";\n\nexport default combineReducers({\n  quiz: quizReducer,\n  create: createReducer,\n  auth: authReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux'\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n\n//Redux devtools https://github.com/zalmoxisus/redux-devtools-extension\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}